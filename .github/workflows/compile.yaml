name: Compile the project

on: 
  schedule:
    - cron: "0 1 * * 0" 
  push:
  # pull_request:
  #   branches:
  #     - main

jobs:
  kernel-compilation:
    runs-on: ubuntu-latest
    steps:
      - name: Try the compilation cache for riscv toolchain
        id: cache-riscv-gcc
        uses: actions/cache@v4
        with: 
          path: /opt/riscv
          key: ${{ runner.os }}-riscv-gcc

      - name: Clone the riscv toolchain
        if: steps.cache-riscv-gcc.outputs.cache-hit != 'true'
        uses: actions/checkout@v4
        with:
          repository: riscv/riscv-gnu-toolchain
          path: riscv-gcc-repo

      - name: Install needed packages
        if: steps.cache-riscv-gcc.outputs.cache-hit != 'true'
        run: sudo apt-get install autoconf automake autotools-dev curl python3 python3-pip libmpc-dev libmpfr-dev libgmp-dev gawk build-essential bison flex texinfo gperf libtool patchutils bc zlib1g-dev libexpat-dev ninja-build git cmake libglib2.0-dev

      - name: Build the toolchain
        if: steps.cache-riscv-gcc.outputs.cache-hit != 'true'
        run: cd riscv-gcc-repo && ./configure --prefix=/opt/riscv --with-arch=rv32gc --with-abi=ilp32d && sudo make -j $(nproc) linux

      - name: Install packages for the emulator
        if: steps.cache-uriscv.outputs.cache-hit != 'true'
        run: sudo apt install git build-essential libc6 cmake libelf-dev libboost-dev libboost-program-options-dev libsigc++-2.0-dev gcc-riscv64-unknown-elf 

      - name: Download and extract the emulator
        if: steps.cache-uriscv.outputs.cache-hit != 'true'
        run: wget http://www.cs.unibo.it/~renzo/so/MicroPandOS/uriscv.tar.gz && tar -xf uriscv.tar.gz

      - name: Create the directories for the emulator
        if: steps.cache-uriscv.outputs.cache-hit != 'true'
        run: mkdir -p build
        working-directory: uriscv

      - name: Compile the emulator
        if: steps.cache-uriscv.outputs.cache-hit != 'true'
        run: export PATH=$PATH:/opt/riscv && cmake .. && make -j $(nproc) && sudo make install 
        working-directory: uriscv/build

      - name: Checkout the kernel repo
        uses: actions/checkout@v4
        with:
          path: kebab-os

      - name: Build the kernel
        run: cd kebab-os && make
